import numpy
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

x_train = numpy.load("regression_Xtrain.npy")
y_train = numpy.load("regression_ytrain.npy")
x_test = numpy.load("regression_Xtest.npy")
y_test = numpy.load("regression_ytest.npy")

n = 10

for i in range(1, n+1):

    poly = PolynomialFeatures(degree=i, include_bias=False)

    xTrainPoly = poly.fit_transform(x_train.reshape(-1, 1))
    xTestPoly = poly.fit_transform(x_test.reshape(-1, 1))

    lr = LinearRegression()

    lr.fit(xTrainPoly, y_train)

    predicted = lr.predict(xTestPoly)

    MSE = mean_squared_error(y_test, predicted)

    plt.plot(x_test, predicted, label="Model")

    plt.scatter(x_test, y_test, c='r')

    print("MSE of degree", str(i), "equals to", MSE)

    plt.show()
